#!/usr/bin/env ts-node

const algorithms = {

  brotli() {
    const zlib = require('zlib');
    const b = zlib.constants;
    const compress = zlib.createBrotliCompress({
      chunkSize: 64 * 1024,
      params: {
        [zlib.constants.BROTLI_PARAM_MODE]:      zlib.constants.BROTLI_MODE_TEXT,
        [zlib.constants.BROTLI_PARAM_QUALITY]:   zlib.constants.BROTLI_MAX_QUALITY,
        [zlib.constants.BROTLI_PARAM_LGWIN]:     zlib.constants.BROTLI_MAX_WINDOW_BITS,
        [zlib.constants.BROTLI_PARAM_SIZE_HINT]: require('fs').fstatSync(process.stdin.fd).size,
      }
    });
    process.stdin
      .pipe(compress)
      .pipe(process.stdout);
  },

};


const algorithm = algorithms[process.argv[2]];
if (typeof algorithm === 'function') {
  algorithm();
} else {
  throw new Error("Unsupported algorithm: " + algorithm);
}
